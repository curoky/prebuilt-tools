name: build

on:
  push:
    branches:
      - master
  # push:
  #   paths:
  #     - ".github/workflows/build.yaml"
  #     - "pkgs/**"
  #     - "tasks/**"
  #     - "scripts/**"
  workflow_dispatch:
    inputs:
      name:
        description: "package name"
        default: ""
        required: false
        type: string
  # schedule:
  #   - cron: '0 0 - name: - name: 0'

jobs:
  macos:
    runs-on: macos-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - name: aria2
          - name: bzip2
          - name: connect
          - name: coreutils
          - name: findutils
          - name: fzf
          - name: gawk
          - name: gdu
          - name: getopt
          - name: gettext
          - name: git-lfs
          - name: gnugrep
          - name: gnupatch
          - name: gnused
          - name: gnutar
          - name: go-task
          - name: gost
          - name: inetutils
          - name: lsof
          - name: m4
          - name: ncdu_1
          - name: netcat
          - name: openssl
          - name: rime-bundle
          - name: rsync
          - name: shfmt
          - name: silver-searcher
          - name: unzip
          - name: vim
          - name: vim-bundle
          - name: xz
          - name: zip
          - name: zsh
          - name: zsh-bundle
          - name: zstd
          - name: starship
          - name: eza
          - name: bat
          - name: atuin
          - name: fd
          - name: git-absorb
          - name: git-extras

    steps:
      - run: echo "skip_steps=true" >> $GITHUB_ENV
      - run: echo "skip_steps=false" >> $GITHUB_ENV
        if: ${{ github.event_name == 'workflow_dispatch' && contains(inputs.name, matrix.name) }} || ${{ github.event_name == 'push' }}

      - uses: actions/checkout@v4
        if: ${{ env.skip_steps != 'true' }}

      - uses: actions/setup-python@v5
        if: ${{ env.skip_steps != 'true' }}
        with:
          python-version: "3"

      - uses: cachix/install-nix-action@v27
        if: ${{ env.skip_steps != 'true' }}
        with:
          nix_path: nixpkgs=channel:nixos-24.11

      - run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
          ~/.local/bin/task -t tasks/darwin-arm64/Taskfile.yaml setup
          ~/.local/bin/task -t tasks/darwin-arm64/Taskfile.yaml ${{ matrix.name }}
          ./scripts/pack.py
          ./scripts/patch-nix-path.sh tmp/output
          cd tmp
          mv output ${{ matrix.name }}
          tar -czvf ${{ matrix.name }}.darwin_arm64.tar.gz ${{ matrix.name }}
        if: ${{ env.skip_steps != 'true' }}

      - uses: svenstaro/upload-release-action@v2
        if: ${{ env.skip_steps != 'true' }}
        with:
          file: tmp/${{ matrix.name }}.darwin_arm64.tar.gz
          asset_name: ${{ matrix.name }}.darwin_arm64.tar.gz
          tag: "v1.0"
          overwrite: true

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30

  linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        # task --list-all | sed -e 's/://g' -e 's/*/- name:/g'
        include:
          - name: aria2
          - name: atuin
          - name: autoconf
          - name: automake
          - name: bash
          - name: bat
          - name: bazelisk
          - name: binutils
          - name: bison
          - name: buildifier
          - name: bzip2
          - name: cacert
          - name: connect
          - name: coreutils
          - name: croc
          - name: curl
          - name: diffutils
          - name: dive
          - name: ethtool
          - name: eza
          - name: fd
          - name: file
          - name: findutils
          - name: flex
          - name: fzf
          - name: gawk
          - name: gdb
          - name: gdu
          - name: getopt
          - name: gettext
          - name: gh
          - name: git
          - name: git-absorb
          - name: git-extras
          - name: git-lfs
          - name: glibcLocales
          - name: gnugrep
          - name: gnumake
          - name: gnupatch
          - name: gnupg-minimal
          - name: gnused
          - name: gnutar
          - name: go-task
          - name: gost
          - name: gzip
          - name: indent
          - name: inetutils
          - name: iproute2
          - name: iptables
          - name: iputils
          - name: jq
          - name: krb5
          - name: less
          - name: libcap
          - name: libtool
          - name: llvmPackages_18.clang-unwrapped
          - name: lsb-release
          - name: lsof
          - name: m4
          - name: man
          - name: miniserve
          - name: ncdu_1
          - name: netcat
          - name: nettools
          - name: ninja
          - name: nixfmt-rfc-style
          - name: nixpkgs-fmt
          - name: numactl
          - name: openssh_gssapi
          - name: openssl
          - name: patchelf
          - name: perl
          - name: pkg-config
          - name: procps
          - name: procs
          - name: protobuf_24
          - name: protobuf_25
          - name: protobuf_28
          - name: protobuf_3_8_0
          - name: protobuf_3_9_2
          - name: python311
          - name: rime-bundle
          - name: rsync
          - name: ruff
          - name: scc
          - name: shfmt
          - name: silver-searcher
          - name: snappy
          - name: starship
          - name: strace
          - name: tmux
          - name: tmux-bundle
          - name: tree
          - name: tzdata
          - name: unzip
          - name: util-linux
          - name: vim
          - name: vim-bundle
          - name: wget
          - name: xxd
          - name: xz
          - name: zip
          - name: zlib
          - name: zlib-ng
          - name: zsh
          - name: zsh-bundle
          - name: zstd
          - name: exiftool

    steps:
      - run: echo "skip_steps=true" >> $GITHUB_ENV
      - run: echo "skip_steps=false" >> $GITHUB_ENV
        if: ${{ github.event_name == 'workflow_dispatch' && contains(inputs.name, matrix.name) }}

      - uses: actions/checkout@v4
        if: ${{ env.skip_steps != 'true' }}
      - uses: actions/setup-python@v5
        if: ${{ env.skip_steps != 'true' }}
        with:
          python-version: "3"
      - uses: cachix/install-nix-action@v27
        if: ${{ env.skip_steps != 'true' }}
        with:
          nix_path: nixpkgs=channel:nixos-24.11

      - run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
          ~/.local/bin/task -t tasks/linux-x86_64/Taskfile.yaml setup
          ~/.local/bin/task -t tasks/linux-x86_64/Taskfile.yaml ${{ matrix.name }}
          ./scripts/pack.py
          ./scripts/patch-nix-path.sh tmp/output
          cd tmp
          mv output ${{ matrix.name }}
          tar -czvf ${{ matrix.name }}.linux_x86_64.tar.gz ${{ matrix.name }}
        if: ${{ env.skip_steps != 'true' }}

      # - run: chmod +w -R /tmp/output
      # - run: ./scripts/strip-bin.sh /tmp/output
      - uses: svenstaro/upload-release-action@v2
        if: ${{ env.skip_steps != 'true' }}
        with:
          file: tmp/${{ matrix.name }}.linux_x86_64.tar.gz
          asset_name: ${{ matrix.name }}.linux_x86_64.tar.gz
          tag: "v1.0"
          overwrite: true

      - uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30
